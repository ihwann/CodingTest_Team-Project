<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />

	
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
	        </beans:list>
	    </beans:property>
   		
	</beans:bean>
	    
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />


	</beans:bean>
	
	<context:component-scan base-package="com.stevelee.java" />
	
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<beans:property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<!--  <beans:property name="url" value="jdbc:mariadb://192.168.137.1:3306/gongbubang" />-->
		<beans:property name="url" value="jdbc:mariadb://27.35.71.110:3306/steveleejavahome" />
		<beans:property name="username" value="p_codingtest" />
		<beans:property name="password" value="2019coding01!" />
	</beans:bean>
	

	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations" value="classpath:com/stevelee/java/dao/mapper/*.xml"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	
   <beans:bean id="loginaop" class="com.stevelee.java.aop.LoginAop"/>
   
   <aop:config>
      <aop:aspect id = "logger" ref = "loginaop">
         <aop:pointcut id = "pointc" expression = "execution(public * *..*Controller.*(..))"></aop:pointcut>
         <aop:around pointcut-ref = "pointc" method = "trace"></aop:around>
      </aop:aspect>
   </aop:config> 
   
   <beans:bean id="AuthenticationInterceptor" class="com.stevelee.java.interceptor.AuthenticationInterceptor"/>
   
   <interceptors>
   		<interceptor>
   			<mapping path="/user/logincheck" />
   			<beans:ref bean="AuthenticationInterceptor" />
   		</interceptor>
   </interceptors>
   	
	
	
</beans:beans>
